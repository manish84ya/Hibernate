package com.BugTracking;
// Generated 30 May, 2018 6:17:26 PM by Hibernate Tools 3.5.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "bt2")
public class User implements java.io.Serializable {

	private long userId;
	private Milestone milestone;
	private Projects projects;
	private String firstName;
	private String lastName;
	private String userPassword;
	private String userDesignation;
	private String userEmailId;
	private String username;
	private String dateOfJoining;
	private Set bugcomments = new HashSet(0);
	private Set bugs = new HashSet(0);
	private Set events = new HashSet(0);
	private Set milestonecomments = new HashSet(0);

	public User() {
	}

	public User(long userId) {
		this.userId = userId;
	}

	public User(long userId, Milestone milestone, Projects projects, String firstName, String lastName,
			String userPassword, String userDesignation, String userEmailId, String username, String dateOfJoining,
			Set bugcomments, Set bugs, Set events, Set milestonecomments) {
		this.userId = userId;
		this.milestone = milestone;
		this.projects = projects;
		this.firstName = firstName;
		this.lastName = lastName;
		this.userPassword = userPassword;
		this.userDesignation = userDesignation;
		this.userEmailId = userEmailId;
		this.username = username;
		this.dateOfJoining = dateOfJoining;
		this.bugcomments = bugcomments;
		this.bugs = bugs;
		this.events = events;
		this.milestonecomments = milestonecomments;
	}

	@Id

	@Column(name = "User_Id", unique = true, nullable = false)
	public long getUserId() {
		return this.userId;
	}

	public void setUserId(long userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MileStone_ID")
	public Milestone getMilestone() {
		return this.milestone;
	}

	public void setMilestone(Milestone milestone) {
		this.milestone = milestone;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Project_Id")
	public Projects getProjects() {
		return this.projects;
	}

	public void setProjects(Projects projects) {
		this.projects = projects;
	}

	@Column(name = "First_Name")
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "Last_Name")
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "UserPassword")
	public String getUserPassword() {
		return this.userPassword;
	}

	public void setUserPassword(String userPassword) {
		this.userPassword = userPassword;
	}

	@Column(name = "User_Designation")
	public String getUserDesignation() {
		return this.userDesignation;
	}

	public void setUserDesignation(String userDesignation) {
		this.userDesignation = userDesignation;
	}

	@Column(name = "User_Email_ID")
	public String getUserEmailId() {
		return this.userEmailId;
	}

	public void setUserEmailId(String userEmailId) {
		this.userEmailId = userEmailId;
	}

	@Column(name = "Username")
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "Date_Of_Joining")
	public String getDateOfJoining() {
		return this.dateOfJoining;
	}

	public void setDateOfJoining(String dateOfJoining) {
		this.dateOfJoining = dateOfJoining;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getBugcomments() {
		return this.bugcomments;
	}

	public void setBugcomments(Set bugcomments) {
		this.bugcomments = bugcomments;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "bugs_user", catalog = "bt2", joinColumns = {
			@JoinColumn(name = "User_ID_FK", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Bug_id_fk", nullable = false, updatable = false) })
	public Set getBugs() {
		return this.bugs;
	}

	public void setBugs(Set bugs) {
		this.bugs = bugs;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "event_user", catalog = "bt2", joinColumns = {
			@JoinColumn(name = "User_ID_FK", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Event_id_fk", nullable = false, updatable = false) })
	public Set getEvents() {
		return this.events;
	}

	public void setEvents(Set events) {
		this.events = events;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getMilestonecomments() {
		return this.milestonecomments;
	}

	public void setMilestonecomments(Set milestonecomments) {
		this.milestonecomments = milestonecomments;
	}

}
